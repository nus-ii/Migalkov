<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>